{
  "version": 3,
  "sources": ["../../@farcaster/miniapp-wagmi-connector/dist/connector.js", "../../@farcaster/miniapp-wagmi-connector/dist/index.js"],
  "sourcesContent": ["import MiniAppSDK from '@farcaster/miniapp-sdk';\nimport { ChainNotConfiguredError, createConnector, } from '@wagmi/core';\nimport { SwitchChainError, fromHex, getAddress, numberToHex } from 'viem';\nfarcasterMiniApp.type = 'farcasterMiniApp';\nlet accountsChanged;\nlet chainChanged;\nlet disconnect;\nexport function farcasterMiniApp() {\n    return createConnector((config) => ({\n        id: 'farcaster',\n        name: 'Farcaster',\n        rdns: 'xyz.farcaster.MiniAppWallet',\n        icon: 'https://imagedelivery.net/BXluQx4ige9GuW0Ia56BHw/055c25d6-7fe7-4a49-abf9-49772021cf00/original',\n        type: farcasterMiniApp.type,\n        async connect({ chainId } = {}) {\n            const provider = await this.getProvider();\n            const accounts = await provider.request({\n                method: 'eth_requestAccounts',\n            });\n            let targetChainId = chainId;\n            if (!targetChainId) {\n                const state = (await config.storage?.getItem('state')) ?? {};\n                const isChainSupported = config.chains.some((x) => x.id === state.chainId);\n                if (isChainSupported)\n                    targetChainId = state.chainId;\n                else\n                    targetChainId = config.chains[0]?.id;\n            }\n            if (!targetChainId)\n                throw new Error('No chains found on connector.');\n            if (!accountsChanged) {\n                accountsChanged = this.onAccountsChanged.bind(this);\n                // @ts-expect-error - provider type is stricter\n                provider.on('accountsChanged', accountsChanged);\n            }\n            if (!chainChanged) {\n                chainChanged = this.onChainChanged.bind(this);\n                provider.on('chainChanged', chainChanged);\n            }\n            if (!disconnect) {\n                disconnect = this.onDisconnect.bind(this);\n                provider.on('disconnect', disconnect);\n            }\n            let currentChainId = await this.getChainId();\n            if (targetChainId && currentChainId !== targetChainId) {\n                const chain = await this.switchChain({ chainId: targetChainId });\n                currentChainId = chain.id;\n            }\n            return {\n                accounts: accounts.map((x) => getAddress(x)),\n                chainId: currentChainId,\n            };\n        },\n        async disconnect() {\n            const provider = await this.getProvider();\n            if (accountsChanged) {\n                // @ts-expect-error - provider type is stricter\n                provider.removeListener('accountsChanged', accountsChanged);\n                accountsChanged = undefined;\n            }\n            if (chainChanged) {\n                provider.removeListener('chainChanged', chainChanged);\n                chainChanged = undefined;\n            }\n            if (disconnect) {\n                provider.removeListener('disconnect', disconnect);\n                disconnect = undefined;\n            }\n        },\n        async getAccounts() {\n            const provider = await this.getProvider();\n            const accounts = await provider.request({\n                method: 'eth_accounts',\n            });\n            return accounts.map((x) => getAddress(x));\n        },\n        async getChainId() {\n            const provider = await this.getProvider();\n            const hexChainId = await provider.request({ method: 'eth_chainId' });\n            return fromHex(hexChainId, 'number');\n        },\n        async isAuthorized() {\n            try {\n                const accounts = await this.getAccounts();\n                return !!accounts.length;\n            }\n            catch {\n                return false;\n            }\n        },\n        async switchChain({ chainId }) {\n            const provider = await this.getProvider();\n            const chain = config.chains.find((x) => x.id === chainId);\n            if (!chain) {\n                throw new SwitchChainError(new ChainNotConfiguredError());\n            }\n            await provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: numberToHex(chainId) }],\n            });\n            // providers should start emitting these events - remove when hosts have upgraded\n            //\n            // explicitly emit this event as a workaround for ethereum provider not\n            // emitting events, can remove once events are flowing\n            config.emitter.emit('change', { chainId });\n            return chain;\n        },\n        onAccountsChanged(accounts) {\n            if (accounts.length === 0) {\n                this.onDisconnect();\n            }\n            else {\n                config.emitter.emit('change', {\n                    accounts: accounts.map((x) => getAddress(x)),\n                });\n            }\n        },\n        onChainChanged(chain) {\n            const chainId = Number(chain);\n            config.emitter.emit('change', { chainId });\n        },\n        async onDisconnect() {\n            config.emitter.emit('disconnect');\n        },\n        async getProvider() {\n            return MiniAppSDK.wallet.ethProvider;\n        },\n    }));\n}\n// Backward compatibility\nexport const farcasterFrame = farcasterMiniApp;\nfarcasterFrame.type = 'farcasterFrame';\n", "import { farcasterFrame, farcasterMiniApp } from './connector.js';\nexport * from './connector.js';\n// Default export is the new name\nexport default farcasterMiniApp;\n// Also export with old name for backward compatibility\nexport { farcasterFrame };\n"],
  "mappings": "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",
  "names": ["dist_default"]
}
